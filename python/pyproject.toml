[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-policy-advisor"
version = "0.1.0"
description = "AI-powered policy analysis tool using local Ollama models"
readme = "README.md"   # <-- ensure README.md exists in the python/ folder
requires-python = ">=3.9"
license = { text = "AGPL-3.0-only" }  # or: { file = "LICENSE" }
authors = [
  { name = "Christian Arthur", email = "contact@christianarthur.tech" },
]
keywords = ["ai", "policy", "analysis", "ollama", "data-science"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
  "pandas>=1.5",
  "numpy>=1.23",
  "requests>=2.31.0",
]

[project.optional-dependencies]
jupyter = ["jupyter>=1.0.0", "ipython>=8.0.0"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
]

# Ruff configuration (linter & formatter)
[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]

ignore = [
    "E501",   # line too long, handled by formatter
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
]

[tool.ruff.lint.isort]
known-first-party = ["ai_policy_advisor"]
force-sort-within-sections = true
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--cov=ai_policy_advisor",
    "--cov-report=term-missing",
]
testpaths = ["tests"]

[project.urls]
Homepage = "https://github.com/christian-arthur/ai-policy-advisor"
Repository = "https://github.com/christian-arthur/ai-policy-advisor"
Documentation = "https://github.com/christian-arthur/ai-policy-advisor#readme"
"Bug Tracker" = "https://github.com/christian-arthur/ai-policy-advisor/issues"

# Use packages (directory with __init__.py), not py-modules
[tool.setuptools.packages.find]
where = ["."]
include = ["ai_policy_advisor*"]

# Remove the whole [tool.setuptools.py-modules] block

[project.scripts]
ai-policy-advisor = "ai_policy_advisor:main"